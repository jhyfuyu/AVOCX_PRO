import requests
from datetime import datetime, timedelta
from dateutil.relativedelta import relativedelta

API_KEY = '98402c53500c2c0e7f0d3a659f1c6d2b'
BASE_URL = 'https://api.tgstat.ru'

current_date = str(datetime.now())[:10]

def get_channel_stats(channel_name):
    today = datetime.now()
    yesterday = str(today - timedelta(days=1))[:10]
    a_week_ago = str(today - timedelta(weeks=1))[:10]
    a_month_ago = str(today - relativedelta(months=1))[:10]
    today = str(today)[:10]
    print(a_month_ago)

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞–Ω–∞–ª–∞
    response_stat = requests.get(f'https://api.tgstat.ru/channels/stat?token={API_KEY}&channelId={channel_name}')
    sub_today = requests.get(f'https://api.tgstat.ru/channels/subscribers?token={API_KEY}&channelId={channel_name}&startDate={today}&endDate={today}')
    sub_month = requests.get(f'https://api.tgstat.ru/channels/subscribers?token={API_KEY}&channelId={channel_name}&startDate={a_month_ago}&endDate={a_month_ago}')
    forwards = requests.get(f'https://api.tgstat.ru/channels/forwards?token={API_KEY}&channelId={channel_name}&startTime={today}&endTime={a_month_ago}')
    posts = requests.get(f'https://api.tgstat.ru/channels/posts?token={API_KEY}&channelId={channel_name}')

    if response_stat.status_code != 200:
        print(f"–û—à–∏–±–∫–∞: {response_stat.json()}")
        return

    data = response_stat.json()['response']
    forwards_quality = len(forwards.json()['response'])
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
    channel_info = {
        '–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞': data['title'],
        'üî∑ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç': data.get('exists'),
        'üî∑ –ü–î–ü': data['participants_count'],
        '  ER 24—á': data["err24_percent"],
        'üî∑ –û—Ö–≤–∞—Ç': data["er_percent"],
        '   24 —á–∞—Å–∞': data["adv_post_reach_24h"],
        '   48 —á–∞—Å–æ–≤': data["adv_post_reach_48h"],
        'üî∑ —á–∏—Å–ª–æ –ø–µ—Ä–µ—Å—ã–ª–æ–∫ –∑–∞ –º–µ—Å—è—Ü': forwards_quality,
        'üî∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ': data["mentions_count"],
        'üî∑ –ø–æ—Å—Ç–æ–≤ –∑–∞ –º–µ—Å—è—Ü': posts.json()['response']['total_count']
    }
    
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    return channel_info
